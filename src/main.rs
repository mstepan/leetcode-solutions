#![allow(dead_code)]
mod leetcode;
use crate::leetcode::maximum_gap::Solution;

fn main() {
    let data = vec![
        715527844, 114804173, 233351622, 767501584, 481482025, 525539848, 621977762, 955993441,
        732411232, 931703352, 892916092, 14540805, 393371174, 754207448, 146477003, 79713800,
        732884180, 399516744, 242715284, 768755340, 1688413, 267506137, 876242681, 602126212,
        365491563, 244334233, 463748821, 452116417, 403953716, 348191089, 998372855, 370822772,
        290255707, 705606356, 351350038, 204564123, 480513168, 717158014, 402299223, 103112065,
        361546848, 431425370, 229537173, 424416178, 867060372, 300824872, 636195001, 6118839,
        290607650, 857843153, 349931026, 514159401, 905427350, 60643022, 379707438, 937068918,
        184624431, 69683167, 762549359, 197498451, 700528677, 611597221, 43779918, 782567041,
        154713859, 818608881, 104635793, 643083424, 621163451, 209226091, 426561509, 907987121,
        946273293, 565381910, 344907233, 623264430, 808957529, 540026628, 561884528, 502669765,
        669076649, 208705476, 376584101, 923042503, 120077034, 553886246, 436511368, 3746963,
        406817418, 687120830, 573472726, 659646109, 5266543, 137190448, 771644495, 678616502,
        723501755, 465171935, 981927931, 134466897, 883981579, 557127080, 177713215, 543695404,
        921975742, 75319801, 68899959, 869433974, 640099664, 854395363, 582020060, 552919911,
        88646178, 793243567, 606595729, 527809975, 129862240, 718168752, 344625499, 215827091,
        237770379, 246369388, 601724911, 588490364, 188647419, 535411684, 895071019, 773838966,
        856067419, 105905234, 562606252, 56235919, 968934898, 669784174, 825551063, 523654278,
        35360986, 891533966, 426191882, 489033809, 626854041, 497669955, 490533869, 916875973,
        74521527, 935834757, 998108485, 354357876, 322324776, 917260399, 28966000, 522342733,
        820598885, 686166537, 593472015, 852856281, 509508050, 650708773, 88513756, 452810209,
        678858653, 772293318, 732523513, 970248818, 193611797, 913658323, 245065565, 121630273,
        411477060, 778893466, 505813979, 95089973, 870760642, 707882799, 971905758, 518142011,
        865900801, 80089557, 407756001, 805792261, 328875058, 579439624, 848230370, 467323447,
        524028597, 893742807, 252564434, 724011610, 696566587, 359882309, 156906220, 177221973,
        828168882, 735724379, 567864897, 234924196, 263658708, 176698669, 382391278, 127825385,
        328588215, 897067885, 819254309, 360554763, 253596861, 223065849, 631368021, 799394870,
        888158511, 944628030, 393986502, 244242180, 383273652, 730657946, 388835935, 278446632,
        967630233, 892241859, 867186833, 570475350, 876078557, 538135577, 535262992, 854518137,
        255307011, 513086537, 622269771, 801347070, 701812561, 347075048, 91548942, 587599531,
        158387746, 177826509, 124441657, 478791691, 976165471, 368692655, 270147339, 382858153,
        359542396, 189612939, 262798599, 449745500, 42021844, 991839798, 326368352, 752517034,
        847070527, 505482673, 337937536, 593276584, 165818161, 240556244, 18011955, 240976544,
        715126762, 724913576, 605170332, 511177947, 137664295, 831900050, 953145413, 472029934,
        19867739, 369511506, 892010187, 913639271, 466788791, 116805657, 906900041, 336136827,
        632881493, 477692139, 158733275, 871967570, 711760180, 518266409, 505087717, 120570209,
        84375767, 456115886, 41777681, 448254322, 988746774, 938485111, 471897335, 55628316,
        520742415, 87319610, 282289618, 715061611, 394043430, 290410467, 13553491, 678592245,
        914833042, 452299634, 175078154, 44807500, 230050762, 903037197, 738249799, 235413552,
        861007081, 954951073, 64513033, 66246501, 2907642, 710710635, 798700018, 941704953,
        891976777, 828409982, 646822366, 7742186, 419867261, 185554524, 201847395, 915389363,
        518333488, 229109645, 510068758, 718045091, 462308478, 595505862, 800109097, 418445458,
        257073962, 31538136, 31052997, 636549777, 637952319, 194654774, 891771315, 230796066,
        776821298, 20980177, 739348799, 213863541, 429978880, 86691434, 203538891, 876103738,
        767684503, 987798700, 171849686, 624100276, 931605515, 934545473, 979342528, 3844392,
        753488367, 248059929, 426343401, 312624387, 74588529, 133083941, 329821975, 104898665,
        704280982, 409230009, 562089618, 964137791, 894866242, 97096021, 736979163, 168750530,
        927325134, 167566095, 775644614, 41734315, 137802957, 502774100, 2834928, 703552062,
        327261236, 288340598, 214072905, 159077850, 693220962, 700673775, 829826275, 170982751,
        419785913, 610017471, 246219040, 470664239, 19430385, 913247072, 700120511,
    ];

    let max_gap = Solution::maximum_gap(data);

    assert_eq!(15170477, max_gap, "Incorrect max_gap returned");

    println!("main done...");
}

fn print_vector(data: &Vec<i32>) {
    let mut data_str = String::with_capacity(data.len() * 4);

    data_str.push('[');

    for (i, val) in data.iter().enumerate() {
        if i == 0 {
            data_str.push_str(&format!("{}", val));
        } else {
            data_str.push_str(&format!(", {}", val));
        }
    }

    data_str.push(']');

    println!("{data_str}");
}
